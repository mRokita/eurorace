
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
    env_file:
      - .env
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             daphne -b 0.0.0.0 -p 8000 eurorace.asgi:application"

  test:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - .:/app
    environment:
      - DEBUG=${TEST_DEBUG}
      - DB_NAME=${TEST_DB_NAME}
      - DB_USER=${TEST_DB_USER}
      - DB_PASSWORD=${TEST_DB_PASSWORD}
      - DB_HOST=${TEST_DB_HOST}
      - DB_PORT=${TEST_DB_PORT}
      - REDIS_URL=${TEST_REDIS_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    platform: linux/amd64
    image: postgis/postgis:15-3.3
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  static_volume:
  postgres_data:
